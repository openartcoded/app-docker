version: "3.5"
services:
  ####### MongoDB #######
  mongo:
    image: mongo:6
    networks:
      artcoded:
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./data/db:/data/db
  ####### Keycloak #######
  postgresql:
    restart: always
    networks:
      artcoded:
    image: "postgres:14"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - ./data/keycloak-postgres:/var/lib/postgresql/data
  keycloak:
    restart: always
    image: nbittich/keycloak:23.0.5
    networks:
      artcoded:
    environment:
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://postgresql:5432/keycloak"
      KC_PROXY: edge
    command: start --optimized
  ####### Redis #######
  redis:
    image: redis:7-alpine
    restart: always
    networks:
      artcoded:
    command: redis-server  --appendonly yes
    volumes:
      - ./data/redis:/data
  ####### Artemis #######
  artemis:
    image: nbittich/artemis:v2024.0.0-2_31_2-jre-21
    networks:
      artcoded:
    restart: always
    volumes:
      - ./config/artemis/login.config:/var/lib/artemis-instance/etc/login.config
      - ./config/artemis/broker.xml:/var/lib/artemis-instance/etc/broker.xml
      - ./data/artemis:/var/lib/artemis-instance/data
      - ./data/artemis/journal:/var/lib/artemis-instance/data/journal
    user: root
  ####### Api Gateway #######
  api-gateway:
    image: nbittich/api-gateway:2024.0.2
    restart: always
    networks:
      artcoded:
    depends_on:
      - api-backend
      - back-office
      - website
      - triplestore
    volumes:
      - openj9cache:/opt/shareclasses
      - ./config/gateway:/usr/config
    environment:
      SERVER_PORT: 80
  ####### Api Backend #######
  api-backend:
    image: nbittich/api-backend:2024.1.0
    restart: always
    networks:
      artcoded:
    volumes:
      - openj9cache:/opt/shareclasses
      - ./data/backend:/var/artcoded/data
      - ./data/backend/temp:/var/undertow/upload
      - ./config/backend:/usr/config
      - ./config/scripts:/var/artcoded_scripts
    environment:
      SERVER_PORT: 80
      PROJECT_BASE_PATH: /var/artcoded/data
      ARTEMIS_URL: tcp://artemis:61616
      MULTIPART_TEMP_DIRECTORY: /var/undertow/upload
      MONGOCK_TRANSACTION_ENABLED: "false" # todo fix the bug
      ARTEMIS_USER: artemis
      ARTEMIS_PASSWORD: artemis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOGGING_CONFIG_FILE: /usr/config/logback.xml
      MONGO_DB_HOST: mongo
      MONGO_DB_PORT: 27017
      MONGO_DB_USERNAME: root
      MONGO_DB_PASSWORD: root
      PROFILE_ACTIVE: prod
      PATH_TO_SCRIPTS: /var/artcoded_scripts
  ####### BACK OFFICE #######
  back-office:
    image: nbittich/back-office:v2024.1.2
    restart: always
    networks:
      artcoded:
    volumes:
      - ./config/back-office/nginx.conf:/etc/nginx/nginx.conf
    environment:
      ENV_TYPE: "TEST"
      IMMO_ENABLED: "true"
  ####### Triplestore #######
  triplestore:
    networks:
      artcoded:
    image: nbittich/triplestore:2024.0.2
    restart: always
    environment:
      DATA_DIR: /triplestore
      SECONDS_BEFORE_QUERY_TIMEOUT: "30"
      BANDWIDTH_CAPACITY: "20"
      SECURITY_CONFIG: "classpath:config/security.yml"
      ARTEMIS_CONFIG: "classpath:config/artemis.yml"
      ARTEMIS_URL: tcp://artemis:61616
      ARTEMIS_USER: artemis
      ARTEMIS_PASSWORD: artemis
      MIGRATION_PATH: /migrations
      MIGRATION_DEFAULT_GRAPH: "https://bittich.be/application"
      SERVER_PORT: 80
      JWK_SET_URI: http://auth.somehost.org:8080/realms/Artcoded/protocol/openid-connect/certs
    volumes:
      - openj9cache:/opt/shareclasses
      - ./data/tdb2:/triplestore
      - ./data/migrations:/migrations
  ####### Website #######
  website:
    image: nbittich/websitev2:v2024.0.1
    restart: always
    networks:
      artcoded:
    environment:
      BACKEND_URL: "http://api-backend"
      SERVER_PORT: 80
      SPARQL_DEFAULT_URL: "http://triplestore/public/sparql"
  ####### Graphana #######
  grafana:
    restart: unless-stopped
    image: grafana/grafana:10.2.2
    networks:
      artcoded:
    volumes:
      - ./data/grafana:/var/lib/grafana
  ####### Prometheus #######
  prometheus:
    restart: unless-stopped
    image: prom/prometheus:v2.48.1
    volumes:
      - ./data/prometheus:/prometheus
    depends_on:
      - keycloak
    networks:
      artcoded:
  ###### Nextcloud ######
  cloud:
    restart: always
    image: nextcloud:28-fpm-alpine
    volumes:
      - ./data/nextcloud:/var/www/html
    environment:
      POSTGRES_HOST: postgresql
      REDIS_HOST: redis
    depends_on:
      - postgresql
      - redis
    networks:
      artcoded:
  cloud-cron:
    image: nextcloud:28-fpm-alpine
    environment:
      POSTGRES_HOST: postgresql
      REDIS_HOST: redis
    restart: always
    volumes:
      - ./../nextcloud-data:/var/www/html
    entrypoint: /cron.sh
    networks:
      artcoded:
    depends_on:
      - postgresql
      - redis
      - cloud
volumes:
  openj9cache:
networks:
  artcoded:
